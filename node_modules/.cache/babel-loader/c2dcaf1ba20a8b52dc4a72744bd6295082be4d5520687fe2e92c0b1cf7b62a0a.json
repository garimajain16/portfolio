{"ast":null,"code":"var _jsxFileName = \"C:\\\\Personal PortFolio T-4\\\\src\\\\components\\\\PerformanceMonitor.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FiActivity, FiClock, FiZap, FiX } from 'react-icons/fi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PerformanceMonitor = () => {\n  _s();\n  const [isVisible, setIsVisible] = useState(false);\n  const [metrics, setMetrics] = useState({\n    loadTime: 0,\n    renderTime: 0,\n    memoryUsage: 0,\n    fps: 0\n  });\n  useEffect(() => {\n    // Performance monitoring\n    const startTime = performance.now();\n\n    // Measure page load time\n    window.addEventListener('load', () => {\n      const loadTime = performance.now() - startTime;\n      setMetrics(prev => ({\n        ...prev,\n        loadTime: Math.round(loadTime)\n      }));\n    });\n\n    // Measure memory usage (if available)\n    if ('memory' in performance) {\n      const memoryInfo = performance.memory;\n      const memoryUsage = Math.round(memoryInfo.usedJSHeapSize / memoryInfo.jsHeapSizeLimit * 100);\n      setMetrics(prev => ({\n        ...prev,\n        memoryUsage\n      }));\n    }\n\n    // FPS counter\n    let fps = 0;\n    let lastTime = performance.now();\n    let frameCount = 0;\n    const countFPS = () => {\n      frameCount++;\n      const currentTime = performance.now();\n      if (currentTime >= lastTime + 1000) {\n        fps = Math.round(frameCount * 1000 / (currentTime - lastTime));\n        setMetrics(prev => ({\n          ...prev,\n          fps\n        }));\n        frameCount = 0;\n        lastTime = currentTime;\n      }\n      requestAnimationFrame(countFPS);\n    };\n    requestAnimationFrame(countFPS);\n\n    // Show monitor after 3 seconds (for demo purposes)\n    const timer = setTimeout(() => {\n      if (process.env.NODE_ENV === 'development') {\n        setIsVisible(true);\n      }\n    }, 3000);\n    return () => clearTimeout(timer);\n  }, []);\n  const getPerformanceColor = (value, type) => {\n    switch (type) {\n      case 'loadTime':\n        return value < 1000 ? 'text-green-500' : value < 3000 ? 'text-yellow-500' : 'text-red-500';\n      case 'fps':\n        return value >= 50 ? 'text-green-500' : value >= 30 ? 'text-yellow-500' : 'text-red-500';\n      case 'memory':\n        return value < 50 ? 'text-green-500' : value < 80 ? 'text-yellow-500' : 'text-red-500';\n      default:\n        return 'text-gray-500';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: isVisible && /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        x: 300\n      },\n      animate: {\n        opacity: 1,\n        x: 0\n      },\n      exit: {\n        opacity: 0,\n        x: 300\n      },\n      className: \"fixed top-20 right-4 bg-white dark:bg-gray-800 rounded-lg shadow-lg p-4 z-40 min-w-[200px]\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(FiActivity, {\n            className: \"text-primary-500\",\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm font-semibold text-gray-900 dark:text-white\",\n            children: \"Performance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setIsVisible(false),\n          className: \"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\",\n          children: /*#__PURE__*/_jsxDEV(FiX, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(FiClock, {\n              size: 12,\n              className: \"text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-600 dark:text-gray-300\",\n              children: \"Load Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-xs font-mono ${getPerformanceColor(metrics.loadTime, 'loadTime')}`,\n            children: [metrics.loadTime, \"ms\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(FiZap, {\n              size: 12,\n              className: \"text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-600 dark:text-gray-300\",\n              children: \"FPS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-xs font-mono ${getPerformanceColor(metrics.fps, 'fps')}`,\n            children: metrics.fps\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), metrics.memoryUsage > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center space-x-2\",\n            children: [/*#__PURE__*/_jsxDEV(FiActivity, {\n              size: 12,\n              className: \"text-gray-400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-xs text-gray-600 dark:text-gray-300\",\n              children: \"Memory\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: `text-xs font-mono ${getPerformanceColor(metrics.memoryUsage, 'memory')}`,\n            children: [metrics.memoryUsage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 pt-2 border-t border-gray-200 dark:border-gray-700\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500 dark:text-gray-400 text-center\",\n          children: \"Dev Mode Only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(PerformanceMonitor, \"uOVGYwZw3VzCAexM2EbRzoOAsak=\");\n_c = PerformanceMonitor;\nexport default PerformanceMonitor;\nvar _c;\n$RefreshReg$(_c, \"PerformanceMonitor\");","map":{"version":3,"names":["React","useEffect","useState","motion","AnimatePresence","FiActivity","FiClock","FiZap","FiX","jsxDEV","_jsxDEV","PerformanceMonitor","_s","isVisible","setIsVisible","metrics","setMetrics","loadTime","renderTime","memoryUsage","fps","startTime","performance","now","window","addEventListener","prev","Math","round","memoryInfo","memory","usedJSHeapSize","jsHeapSizeLimit","lastTime","frameCount","countFPS","currentTime","requestAnimationFrame","timer","setTimeout","process","env","NODE_ENV","clearTimeout","getPerformanceColor","value","type","children","div","initial","opacity","x","animate","exit","className","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Personal PortFolio T-4/src/components/PerformanceMonitor.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { FiActivity, FiClock, FiZap, FiX } from 'react-icons/fi';\r\n\r\nconst PerformanceMonitor = () => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  const [metrics, setMetrics] = useState({\r\n    loadTime: 0,\r\n    renderTime: 0,\r\n    memoryUsage: 0,\r\n    fps: 0\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Performance monitoring\r\n    const startTime = performance.now();\r\n    \r\n    // Measure page load time\r\n    window.addEventListener('load', () => {\r\n      const loadTime = performance.now() - startTime;\r\n      setMetrics(prev => ({ ...prev, loadTime: Math.round(loadTime) }));\r\n    });\r\n\r\n    // Measure memory usage (if available)\r\n    if ('memory' in performance) {\r\n      const memoryInfo = performance.memory;\r\n      const memoryUsage = Math.round((memoryInfo.usedJSHeapSize / memoryInfo.jsHeapSizeLimit) * 100);\r\n      setMetrics(prev => ({ ...prev, memoryUsage }));\r\n    }\r\n\r\n    // FPS counter\r\n    let fps = 0;\r\n    let lastTime = performance.now();\r\n    let frameCount = 0;\r\n\r\n    const countFPS = () => {\r\n      frameCount++;\r\n      const currentTime = performance.now();\r\n      \r\n      if (currentTime >= lastTime + 1000) {\r\n        fps = Math.round((frameCount * 1000) / (currentTime - lastTime));\r\n        setMetrics(prev => ({ ...prev, fps }));\r\n        frameCount = 0;\r\n        lastTime = currentTime;\r\n      }\r\n      \r\n      requestAnimationFrame(countFPS);\r\n    };\r\n    \r\n    requestAnimationFrame(countFPS);\r\n\r\n    // Show monitor after 3 seconds (for demo purposes)\r\n    const timer = setTimeout(() => {\r\n      if (process.env.NODE_ENV === 'development') {\r\n        setIsVisible(true);\r\n      }\r\n    }, 3000);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  const getPerformanceColor = (value, type) => {\r\n    switch (type) {\r\n      case 'loadTime':\r\n        return value < 1000 ? 'text-green-500' : value < 3000 ? 'text-yellow-500' : 'text-red-500';\r\n      case 'fps':\r\n        return value >= 50 ? 'text-green-500' : value >= 30 ? 'text-yellow-500' : 'text-red-500';\r\n      case 'memory':\r\n        return value < 50 ? 'text-green-500' : value < 80 ? 'text-yellow-500' : 'text-red-500';\r\n      default:\r\n        return 'text-gray-500';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      {isVisible && (\r\n        <motion.div\r\n          initial={{ opacity: 0, x: 300 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          exit={{ opacity: 0, x: 300 }}\r\n          className=\"fixed top-20 right-4 bg-white dark:bg-gray-800 rounded-lg shadow-lg p-4 z-40 min-w-[200px]\"\r\n        >\r\n          <div className=\"flex items-center justify-between mb-3\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <FiActivity className=\"text-primary-500\" size={16} />\r\n              <span className=\"text-sm font-semibold text-gray-900 dark:text-white\">\r\n                Performance\r\n              </span>\r\n            </div>\r\n            <button\r\n              onClick={() => setIsVisible(false)}\r\n              className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\r\n            >\r\n              <FiX size={14} />\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"space-y-2\">\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FiClock size={12} className=\"text-gray-400\" />\r\n                <span className=\"text-xs text-gray-600 dark:text-gray-300\">Load Time</span>\r\n              </div>\r\n              <span className={`text-xs font-mono ${getPerformanceColor(metrics.loadTime, 'loadTime')}`}>\r\n                {metrics.loadTime}ms\r\n              </span>\r\n            </div>\r\n\r\n            <div className=\"flex items-center justify-between\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <FiZap size={12} className=\"text-gray-400\" />\r\n                <span className=\"text-xs text-gray-600 dark:text-gray-300\">FPS</span>\r\n              </div>\r\n              <span className={`text-xs font-mono ${getPerformanceColor(metrics.fps, 'fps')}`}>\r\n                {metrics.fps}\r\n              </span>\r\n            </div>\r\n\r\n            {metrics.memoryUsage > 0 && (\r\n              <div className=\"flex items-center justify-between\">\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <FiActivity size={12} className=\"text-gray-400\" />\r\n                  <span className=\"text-xs text-gray-600 dark:text-gray-300\">Memory</span>\r\n                </div>\r\n                <span className={`text-xs font-mono ${getPerformanceColor(metrics.memoryUsage, 'memory')}`}>\r\n                  {metrics.memoryUsage}%\r\n                </span>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          <div className=\"mt-3 pt-2 border-t border-gray-200 dark:border-gray-700\">\r\n            <div className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\r\n              Dev Mode Only\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default PerformanceMonitor;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}